plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.dagger.hilt.android")
}

def localPropertiesFile = rootProject.file("local.properties")
def localProperties = new Properties()
localProperties.load(new FileInputStream(localPropertiesFile))

android {
    namespace 'com.example.fitbitdemoapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.fitbitdemoapp"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        buildConfigField("String", "FITBIT_CLIENT_ID", localProperties['fitbitClientId'])
        buildConfigField("String", "FITBIT_CLIENT_SECRET", localProperties['fitbitClientSecret'])
        buildConfigField("String", "FITBIT_CODE_VERIFIER", localProperties['fitbitCodeVerifier'])
        buildConfigField("String", "FITBIT_CODE_CHALLENGE", localProperties['fitbitCodeChallenge'])
        buildConfigField("String", "FITBIT_CODE_CHALLENGE_METHOD", localProperties['fitbitCodeChallengeMethod'])
        buildConfigField("String", "FITBIT_STATE", localProperties['fitbitState'])
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

}

dependencies {

    def nav_version = "2.5.3"

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha02'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.2.2')

    // Add the dependencies for the Dynamic Links and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-dynamic-links-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    implementation("com.google.dagger:hilt-android:2.44")
    kapt("com.google.dagger:hilt-android-compiler:2.44")
    implementation "androidx.hilt:hilt-navigation-compose:1.1.0-alpha01"

    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.squareup.okhttp3:okhttp:4.10.0")
    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'

    implementation("androidx.datastore:datastore-preferences:1.0.0")

    implementation 'androidx.compose.runtime:runtime-livedata:1.4.0-beta02'

    implementation("androidx.navigation:navigation-compose:$nav_version")
}


apply plugin: 'com.google.gms.google-services'
